name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Configurar Java e Maven
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Compilar o projeto (sem rodar testes)
        working-directory: urbanity
        run: mvn clean package -DskipTests

  start-app:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Verificar estrutura de diretórios
        working-directory: /home/runner/work/TecnicasDevOpsFiap/TecnicasDevOpsFiap/urbanity
        run: ls

      - name: Verificar existência do .jar
        working-directory: urbanity
        run: ls target/ || echo "⚠️ O arquivo .jar não foi encontrado!"

      - name: Iniciar aplicação localmente
        working-directory: /home/runner/work/TecnicasDevOpsFiap/TecnicasDevOpsFiap/urbanity
        run: |
          if [ -f target/urbanity-0.0.1-SNAPSHOT.jar ]; then
            nohup java -jar target/urbanity-0.0.1-SNAPSHOT.jar > app.log 2>&1 &
            sleep 20  # Aguarda a inicialização da aplicação
          else
            echo "❌ Erro: Arquivo .jar não encontrado. Verifique se a build foi feita corretamente!"
            exit 1
          fi

      - name: Exibir logs da aplicação
        working-directory: urbanity
        run: cat app.log || echo "⚠️ Nenhum log encontrado. A aplicação pode não ter iniciado corretamente."

      - name: Verificar se a aplicação está rodando
        working-directory: urbanity
        run: |
          for i in {1..30}; do
            if curl -s http://localhost:8080/denuncias; then
              echo "✅ Aplicação rodando!"
              break
            fi
            sleep 2
          done || echo "❌ A API não respondeu dentro do tempo esperado."

  test:
    runs-on: ubuntu-latest
    needs: start-app
    steps:
      - name: Executar testes automatizados
        working-directory: urbanity
        run: mvn test

      - name: Exibir logs da aplicação
        working-directory: urbanity
        run: cat app.log